#ifndef __NPE_GEM_HCI_LIBRARY_INTERFACE__
#define __NPE_GEM_HCI_LIBRARY_INTERFACE__
#include <stdint.h>

#include "wf_gem_hci_manager_gymconnect.h"

typedef void (*one_second_timeout_t)(void);

typedef struct npe_gem_hci_library_interface
{
    uint8_t error_code;
}standard_response_t;




uint32_t npe_gem_hci_library_interface_init(one_second_timeout_t one_second_timeout_cb);
uint32_t npe_hci_library_send_ping(void);
uint32_t npe_hci_library_send_command_bluetooth_config_set_device_name(utf8_data_t* bluetoothName);
uint32_t npe_hci_library_send_command_bluetooth_info_set_manufacturer_name(utf8_data_t* manufacturer_name);
uint32_t npe_hci_library_send_command_bluetooth_info_set_model_number(utf8_data_t* model_number);
uint32_t npe_hci_library_send_command_bluetooth_info_set_serial_number(utf8_data_t* serial_number);
uint32_t npe_hci_library_send_command_bluetooth_info_set_hardware_rev(utf8_data_t* hardware_revision);
uint32_t npe_hci_library_send_command_bluetooth_info_set_firmware_rev(utf8_data_t* firmware_revision);
uint32_t npe_hci_library_send_command_bluetooth_info_set_battery_included(uint8_t battery_included);
uint32_t npe_hci_library_send_command_gymconnect_set_supported_equipment_control_features(uint32_t equipment_control_field_identifier);
uint32_t npe_hci_library_send_command_ant_config_set_hardware_version(uint8_t hardware_version);
uint32_t npe_hci_library_send_command_ant_config_set_model_number(uint16_t model_number);
uint32_t npe_hci_library_send_command_ant_config_set_software_version(uint8_t main, uint8_t supplemental);
uint32_t npe_hci_library_send_command_ant_config_set_serial_number(uint32_t serial_number);
uint32_t npe_hci_library_send_command_gymconnect_set_fe_type(wf_gem_hci_gymconnect_fitness_equipment_type_e fe_type);
uint32_t npe_hci_library_send_command_gymconnect_set_fe_state(wf_gem_hci_gymconnect_fitness_equipment_state_e fe_state, standard_response_t* p_fe_state_response);
uint32_t npe_hci_library_send_command_bluetooth_control_start_advertising(standard_response_t* p_advertising_start_response);
uint32_t npe_hci_library_send_command_bluetooth_control_stop_advertising(standard_response_t* p_advertising_stop_response);
uint32_t npe_hci_library_send_command_gymconnect_perform_workout_data_update(standard_response_t* p_update_response);

#endif